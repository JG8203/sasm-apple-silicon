name: "Build release"

on:
  push:
  workflow_dispatch:

jobs:
  build-launcher:
      name: Build launcher
      strategy:
        matrix:
          go-version: [1.17.x]
          os: [ubuntu-18.04,windows-latest,macos-latest]
      runs-on: ${{ matrix.os }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Install dependencies
          shell: bash
          run: |
           if [ "$RUNNER_OS" == "Linux" ]; then
             DEBIAN_FRONTEND=noninteractive  sudo apt-get update
             DEBIAN_FRONTEND=noninteractive  sudo apt-get install -y libxcursor-dev libxrandr-dev libxinerama-dev libxi-dev libgl1-mesa-dev
           fi
           go get fyne.io/fyne/v2/cmd/fyne
           go install fyne.io/fyne/v2/cmd/fyne

        - name: build
          shell: bash
          run: |
            cd launcher
            if [ "$RUNNER_OS" == "Windows" ]; then
              go build -o out/launcher-${RUNNER_OS}.exe
            elif [ "$RUNNER_OS" == "macOS" ]; then
              go build -o out/launcher-${RUNNER_OS}.app
            else
              go build -o out/launcher-${RUNNER_OS}
            fi

        - name: Copy artifacts
          run: |
            ls ./*

        - name: Upload artifact
          uses: actions/upload-artifact@v2
          with:
            name: launcher
            path: launcher/out/*

  build-and-push-docker:
    name: Build and push Docker image to GhCr
    runs-on: ubuntu-latest
    needs: build-launcher
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ghcr.io/keinenclue/sasm-docker
          tags: type=ref,event=tag

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    needs: [build-and-push-docker, build-launcher]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: launcher
          
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          files: ./*
